//@Description Sketch that takes in an array of signed inputs and returns the maximum value of the sum of any contiguous subarray, in linear time.

pragma options "--bnd-inline-amnt 5 --bnd-inbits 3 --bnd-cbits 2";

int W = 4;

int lss(int[W] in) {
	for(int k=0; k<W; ++k) {
        in[k] = in[k] - 3;
    }
	int sum = 0;
	int maxsum = 0;
	int psum = 0;
	for(int i = 0;i<W; i = i+1) {
		psum = sum;
		sum = sum + in[i];
		if (psum + 1 <= 0) {
            sum = sum -  psum;
        }
		if(sum > maxsum) maxsum = sum;
	}
	return maxsum;
}

int lssSketch(int[W] in) implements lss {
	for(int k=0; k<W; ++k) {
        in[k] = in[k] - 3;
    }
	int sum = 0;
	int maxsum = 0;
	int psum = 0;
	for(int i = 0;i<W; i = i+1) {
		psum = sum;
		sum = sum + in[i];
		if (psum + 1 <= 0) {
            sum = {|  (sum | psum) -  psum |};
        }
		if(sum > maxsum) maxsum = sum;
	}
	return maxsum;
}

