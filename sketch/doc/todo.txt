Features::
EMPTY_STATEMENT
  - extra semicolons. Ex: return foo;;

GLOBALVAR_FOR_TYPE
  - use of global variables in types.

XOR_ARGS_BUG
  - miniTest19.sk is getting the wrong type of args to xor for some reason.

CHOICE - {|} hole generator
  - To implement: deHoleExpr should use mplus on both cases.
    This is relatively easy to implement.
    
HOLE_WIDTH - support for specified width holes
  - To implement: easy, add a bound to a hole, handle in deHoleExpr.

FOR - support for loops
  
INTARRAY - int arrays

Operators (easy to implement):
 LOR: || boolean operator 
 EQ - '==' operator
 PREINC - '++' prefix operator


Features needed, by test case:;
miniTest8.sk: FOR
miniTest10.sk: HOLE_WIDTH, GENERATOR, EQ
miniTest11.sk: EMPTY_STATEMENT
miniTest12.sk: EMPTY_STATEMENT, 
miniTest16.sk: GLOBALVAR_FOR_TYPE
miniTest17.sk: GENERATOR, FOR, PREINC
miniTest19.sk: XOR_ARGS_BUG
miniTest20.sk: HOLE_WIDTH, INTARRAY
miniTest21.sk: PREINC, INTARRAY
miniTest31.sk: CHOICE, LOR

Performance Ideas:: (consider only AFTER we run into performance problems)
* split a program into independent pieces if there are any?
* perform simplification at start to avoid re-evaluating things we know every
  iteration of the CEGIS loop?
* do incremental unrolling on the size of inputs and holes we try?

Other Todo::
* make the pretty printer print prettier

Document Behaviors of sketch::
* if you call a function in two different sketches, are it's holes shared or
  duplicated? (that is, do we need to do everything at once, or one sketch at
  a time?)
* What happens to: ??[4] in terms of type inference?
    blows up
* what happens to: 7[2] in terms of type inference?
    blows up
* are < and > supported for bits?
* if you have a generate call inside a repeat block, is the generate call made
  repeatedly producing new holes each time, or is it called once with the same
  holes replicated?

