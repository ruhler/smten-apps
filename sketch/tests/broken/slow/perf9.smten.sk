
//@Description Sketch to reverse a list.

pragma options "--bnd-unroll-amnt 6 --debug-show-dag";
int N = 6;

struct node{
	node next;
	bit val;	
}

struct list{
	node head;	
	node tail;
}

list populate(bit[N] elems, int n){ /* automatically rewritten */
	list l = new list();
	node prev = null;
	for(int i=0; i<n; ++i){
		node t = new node();
		t.val = elems[i];
		if(prev != null){ prev.next = t; }
		prev = t;
		if(i==0){
			l.head = t;	
		}
	}
	l.tail = prev;
	return l;	
}


bit[N] serialize(list l, int n){ /* automatically rewritten */
	bit[N] out = 0;
	node t = l.head;
	node prev = null;
	for(int i=0; i<n; ++i){
		assert t != null;
		out[i] = t.val;
		prev = t; 
		t = t.next;
	}
	assert prev == 	 l.tail;
	assert t == null;
	return out;
}


bit[N] spec(bit[N] elems, int n){
	list l = populate(elems, n);
	return serialize(l, n);
}



bit[N] sketch(bit[N] elems, int n) implements spec{
    return spec(elems, n);
}

